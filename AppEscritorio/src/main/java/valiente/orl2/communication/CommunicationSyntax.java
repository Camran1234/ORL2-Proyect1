
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package valiente.orl2.communication;

import java.util.ArrayList;
import java_cup.runtime.XMLElement;
import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;
import valiente.orl2.phyton.error.SyntaxError;
import valiente.orl2.webconnection.Solicitud;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class CommunicationSyntax extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return CommunicationSym.class;
}

  /** Default constructor. */
  @Deprecated
  public CommunicationSyntax() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public CommunicationSyntax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public CommunicationSyntax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\153\000\002\002\004\000\002\002\003\000\002\002" +
    "\003\000\002\002\004\000\002\003\004\000\002\003\004" +
    "\000\002\003\004\000\002\003\002\000\002\004\004\000" +
    "\002\067\006\000\002\067\003\000\002\005\005\000\002" +
    "\006\006\000\002\007\010\000\002\010\006\000\002\011" +
    "\004\000\002\012\004\000\002\012\003\000\002\013\010" +
    "\000\002\071\006\000\002\014\004\000\002\070\004\000" +
    "\002\070\003\000\002\015\013\000\002\072\003\000\002" +
    "\072\003\000\002\016\004\000\002\017\005\000\002\020" +
    "\006\000\002\020\003\000\002\021\004\000\002\021\004" +
    "\000\002\021\003\000\002\022\004\000\002\022\004\000" +
    "\002\022\004\000\002\022\003\000\002\026\006\000\002" +
    "\023\004\000\002\024\004\000\002\024\003\000\002\025" +
    "\005\000\002\026\006\000\002\065\007\000\002\027\005" +
    "\000\002\030\005\000\002\031\005\000\002\032\005\000" +
    "\002\033\005\000\002\076\003\000\002\075\004\000\002" +
    "\074\004\000\002\077\005\000\002\077\005\000\002\077" +
    "\003\000\002\100\003\000\002\100\003\000\002\073\004" +
    "\000\002\073\003\000\002\073\003\000\002\101\005\000" +
    "\002\101\005\000\002\066\004\000\002\034\004\000\002" +
    "\035\004\000\002\035\003\000\002\036\005\000\002\037" +
    "\006\000\002\040\005\000\002\041\006\000\002\042\005" +
    "\000\002\043\005\000\002\044\006\000\002\045\005\000" +
    "\002\046\005\000\002\047\006\000\002\050\005\000\002" +
    "\051\005\000\002\052\006\000\002\053\005\000\002\054" +
    "\005\000\002\055\006\000\002\056\005\000\002\061\005" +
    "\000\002\061\005\000\002\061\005\000\002\062\006\000" +
    "\002\062\006\000\002\062\006\000\002\062\006\000\002" +
    "\062\006\000\002\057\005\000\002\057\005\000\002\057" +
    "\005\000\002\060\006\000\002\060\006\000\002\060\006" +
    "\000\002\060\006\000\002\060\006\000\002\063\005\000" +
    "\002\063\005\000\002\063\005\000\002\064\006\000\002" +
    "\064\006\000\002\064\006\000\002\064\006\000\002\064" +
    "\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\352\000\010\002\ufffa\003\014\025\013\001\002\000" +
    "\006\002\ufffa\025\013\001\002\000\006\003\304\025\023" +
    "\001\002\000\006\002\ufffa\025\013\001\002\000\004\002" +
    "\000\001\002\000\004\025\245\001\002\000\004\002\uffff" +
    "\001\002\000\004\002\242\001\002\000\012\003\211\007" +
    "\212\013\213\034\214\001\002\000\010\002\ufffa\003\014" +
    "\025\013\001\002\000\004\025\163\001\002\000\004\002" +
    "\uffd0\001\002\000\006\002\ufffa\025\013\001\002\000\004" +
    "\002\ufffb\001\002\000\004\025\023\001\002\000\006\003" +
    "\054\025\060\001\002\000\006\003\046\010\047\001\002" +
    "\000\006\002\uffc3\025\uffc3\001\002\000\004\031\026\001" +
    "\002\000\006\003\027\025\030\001\002\000\004\027\043" +
    "\001\002\000\006\003\032\027\033\001\002\000\006\003" +
    "\uffaf\025\uffaf\001\002\000\004\010\041\001\002\000\006" +
    "\003\034\010\035\001\002\000\004\026\040\001\002\000" +
    "\006\003\037\026\036\001\002\000\006\003\uffa3\025\uffa3" +
    "\001\002\000\006\003\uff9f\025\uff9f\001\002\000\006\003" +
    "\uffa0\025\uffa0\001\002\000\004\026\042\001\002\000\006" +
    "\003\uffa1\025\uffa1\001\002\000\004\010\044\001\002\000" +
    "\004\026\045\001\002\000\006\003\uffa2\025\uffa2\001\002" +
    "\000\004\026\052\001\002\000\006\003\050\026\051\001" +
    "\002\000\012\003\uffa4\013\uffa4\031\uffa4\034\uffa4\001\002" +
    "\000\012\003\uffa6\013\uffa6\031\uffa6\034\uffa6\001\002\000" +
    "\012\003\uffa5\013\uffa5\031\uffa5\034\uffa5\001\002\000\006" +
    "\003\054\025\060\001\002\000\004\027\156\001\002\000" +
    "\006\002\uffc0\025\uffc0\001\002\000\004\025\076\001\002" +
    "\000\006\002\uffc2\025\uffc2\001\002\000\010\003\061\023" +
    "\062\027\063\001\002\000\004\007\072\001\002\000\004" +
    "\026\071\001\002\000\006\003\064\007\065\001\002\000" +
    "\004\026\070\001\002\000\006\003\066\026\067\001\002" +
    "\000\006\002\uffa7\025\uffa7\001\002\000\006\002\uffab\025" +
    "\uffab\001\002\000\006\002\uffa8\025\uffa8\001\002\000\004" +
    "\025\uffbd\001\002\000\004\026\073\001\002\000\006\002" +
    "\uffa9\025\uffa9\001\002\000\004\006\150\001\002\000\004" +
    "\025\110\001\002\000\004\017\105\001\002\000\004\025" +
    "\101\001\002\000\006\003\uffbf\025\uffbf\001\002\000\004" +
    "\027\102\001\002\000\004\023\103\001\002\000\004\026" +
    "\104\001\002\000\006\003\uffbc\025\uffbc\001\002\000\004" +
    "\026\106\001\002\000\004\006\uffb1\001\002\000\004\032" +
    "\142\001\002\000\004\021\140\001\002\000\004\025\114" +
    "\001\002\000\004\006\132\001\002\000\004\025\121\001" +
    "\002\000\004\024\115\001\002\000\004\026\116\001\002" +
    "\000\004\006\uffb7\001\002\000\004\025\uffbe\001\002\000" +
    "\004\006\124\001\002\000\004\016\122\001\002\000\004" +
    "\026\123\001\002\000\004\006\uffba\001\002\000\004\025" +
    "\126\001\002\000\004\025\uffbb\001\002\000\004\027\127" +
    "\001\002\000\004\016\130\001\002\000\004\026\131\001" +
    "\002\000\004\025\uffb9\001\002\000\004\025\134\001\002" +
    "\000\004\025\uffb8\001\002\000\004\027\135\001\002\000" +
    "\004\024\136\001\002\000\004\026\137\001\002\000\004" +
    "\025\uffb6\001\002\000\004\026\141\001\002\000\004\032" +
    "\uffb4\001\002\000\004\025\144\001\002\000\004\025\uffb5" +
    "\001\002\000\004\027\145\001\002\000\004\021\146\001" +
    "\002\000\004\026\147\001\002\000\004\025\uffb3\001\002" +
    "\000\004\025\151\001\002\000\004\027\153\001\002\000" +
    "\004\025\uffb2\001\002\000\004\017\154\001\002\000\004" +
    "\026\155\001\002\000\004\025\uffb0\001\002\000\004\007" +
    "\157\001\002\000\004\026\160\001\002\000\006\002\uffaa" +
    "\025\uffaa\001\002\000\006\002\uffc1\025\uffc1\001\002\000" +
    "\006\002\uffe4\025\uffe4\001\002\000\006\027\165\034\166" +
    "\001\002\000\006\002\uffe7\025\uffe7\001\002\000\006\012" +
    "\204\013\205\001\002\000\010\011\174\016\167\026\172" +
    "\001\002\000\004\030\202\001\002\000\010\011\174\016" +
    "\167\026\172\001\002\000\010\011\174\016\167\026\172" +
    "\001\002\000\004\025\uffe1\001\002\000\004\025\163\001" +
    "\002\000\004\030\175\001\002\000\004\004\176\001\002" +
    "\000\014\011\uffd5\015\uffd5\016\uffd5\026\uffd5\033\uffd5\001" +
    "\002\000\006\002\uffe5\025\uffe5\001\002\000\004\025\uffe3" +
    "\001\002\000\004\025\uffe2\001\002\000\004\006\203\001" +
    "\002\000\010\011\uffd2\016\uffd2\026\uffd2\001\002\000\004" +
    "\026\207\001\002\000\004\026\206\001\002\000\006\002" +
    "\uffdc\025\uffdc\001\002\000\006\002\uffd7\025\uffd7\001\002" +
    "\000\004\002\ufffe\001\002\000\004\026\241\001\002\000" +
    "\006\003\237\026\240\001\002\000\012\011\174\015\221" +
    "\026\225\033\222\001\002\000\004\011\215\001\002\000" +
    "\004\030\216\001\002\000\004\004\217\001\002\000\004" +
    "\026\220\001\002\000\004\025\ufff4\001\002\000\004\030" +
    "\235\001\002\000\004\030\233\001\002\000\012\011\174" +
    "\015\221\026\225\033\222\001\002\000\012\011\174\015" +
    "\221\026\225\033\222\001\002\000\004\025\uffdd\001\002" +
    "\000\004\025\uffe6\001\002\000\012\011\174\015\221\026" +
    "\225\033\222\001\002\000\004\025\uffdf\001\002\000\004" +
    "\025\uffde\001\002\000\004\025\uffe0\001\002\000\004\004" +
    "\234\001\002\000\012\011\uffd1\015\uffd1\026\uffd1\033\uffd1" +
    "\001\002\000\004\004\236\001\002\000\012\011\uffd3\015" +
    "\uffd3\026\uffd3\033\uffd3\001\002\000\006\003\uffac\025\uffac" +
    "\001\002\000\006\003\uffae\025\uffae\001\002\000\006\003" +
    "\uffad\025\uffad\001\002\000\004\002\001\001\002\000\004" +
    "\025\245\001\002\000\006\002\ufff0\025\ufff0\001\002\000" +
    "\006\017\272\027\273\001\002\000\004\025\251\001\002" +
    "\000\006\002\ufff2\025\ufff2\001\002\000\004\025\uffed\001" +
    "\002\000\006\021\255\027\256\001\002\000\004\025\251" +
    "\001\002\000\004\025\uffeb\001\002\000\004\025\uffec\001" +
    "\002\000\004\016\261\001\002\000\004\017\257\001\002" +
    "\000\004\026\260\001\002\000\004\025\uffee\001\002\000" +
    "\004\030\262\001\002\000\004\006\263\001\002\000\004" +
    "\022\264\001\002\000\004\030\265\001\002\000\006\005" +
    "\270\006\267\001\002\000\004\026\271\001\002\000\004" +
    "\026\uffe8\001\002\000\004\026\uffe9\001\002\000\004\025" +
    "\uffea\001\002\000\004\020\276\001\002\000\004\034\274" +
    "\001\002\000\004\026\275\001\002\000\006\002\ufff3\025" +
    "\ufff3\001\002\000\004\030\277\001\002\000\004\006\300" +
    "\001\002\000\004\026\301\001\002\000\004\025\uffef\001" +
    "\002\000\006\002\ufff1\025\ufff1\001\002\000\004\002\ufffc" +
    "\001\002\000\006\003\uffcb\025\uffcb\001\002\000\006\003" +
    "\317\025\321\001\002\000\004\002\uffcf\001\002\000\012" +
    "\003\310\013\312\031\026\034\313\001\002\000\006\003" +
    "\027\025\030\001\002\000\006\003\027\025\030\001\002" +
    "\000\006\003\uffca\025\uffca\001\002\000\006\003\uffc9\025" +
    "\uffc9\001\002\000\006\003\uffcd\025\uffcd\001\002\000\006" +
    "\003\uffcc\025\uffcc\001\002\000\006\003\333\004\332\001" +
    "\002\000\006\002\uffc6\027\156\001\002\000\004\002\uffc7" +
    "\001\002\000\010\003\325\011\326\027\063\001\002\000" +
    "\004\002\uffce\001\002\000\006\003\317\025\321\001\002" +
    "\000\004\002\uffc8\001\002\000\006\007\072\026\331\001" +
    "\002\000\006\003\330\026\327\001\002\000\006\003\uff9e" +
    "\004\uff9e\001\002\000\006\003\uff9c\004\uff9c\001\002\000" +
    "\006\003\uff9d\004\uff9d\001\002\000\006\003\334\025\335" +
    "\001\002\000\006\003\334\025\335\001\002\000\004\027" +
    "\350\001\002\000\006\003\337\027\340\001\002\000\006" +
    "\003\uffc4\025\uffc4\001\002\000\004\011\346\001\002\000" +
    "\006\003\341\011\342\001\002\000\004\026\345\001\002" +
    "\000\006\003\344\026\343\001\002\000\006\003\uff9b\025" +
    "\uff9b\001\002\000\006\003\uff97\025\uff97\001\002\000\006" +
    "\003\uff98\025\uff98\001\002\000\004\026\347\001\002\000" +
    "\006\003\uff99\025\uff99\001\002\000\004\011\351\001\002" +
    "\000\004\026\352\001\002\000\006\003\uff9a\025\uff9a\001" +
    "\002\000\006\003\uffc5\025\uffc5\001\002\000\004\002\ufffd" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\352\000\026\002\011\003\010\007\007\011\005\016" +
    "\003\017\014\061\004\066\016\075\015\076\006\001\001" +
    "\000\020\003\353\007\007\011\005\016\003\017\014\061" +
    "\020\066\016\001\001\000\014\034\023\056\021\057\306" +
    "\074\305\077\304\001\001\000\020\003\302\007\007\011" +
    "\005\016\003\017\014\061\020\066\016\001\001\000\002" +
    "\001\001\000\012\010\243\012\246\013\245\014\242\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\002\207\003\010\007\007\011\005\016\003\017" +
    "\014\061\004\066\016\075\015\076\006\001\001\000\006" +
    "\020\163\026\161\001\001\000\002\001\001\000\020\003" +
    "\017\007\007\011\005\016\003\017\014\061\020\066\016" +
    "\001\001\000\002\001\001\000\010\034\023\056\021\057" +
    "\024\001\001\000\012\035\056\036\052\040\055\062\054" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\060\030\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\035\160" +
    "\036\052\040\055\062\054\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\037\076\053\074\054\073\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\050\110\051\106\001\001\000" +
    "\002\001\001\000\004\041\077\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\045\112\046\111\001" +
    "\001\000\002\001\001\000\006\042\116\043\117\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\044\124\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\047\132\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\052\142\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\055\151\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\021\172\027\170" +
    "\032\167\001\001\000\002\001\001\000\010\021\200\027" +
    "\170\032\167\001\001\000\010\021\177\027\170\032\167" +
    "\001\001\000\002\001\001\000\006\020\176\026\161\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\022\225" +
    "\027\222\031\226\033\223\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\022" +
    "\231\027\222\031\226\033\223\001\001\000\012\022\230" +
    "\027\222\031\226\033\223\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\022\227\027\222\031\226\033\223" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\010\243\012\301" +
    "\013\245\014\242\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\015\251\070\247\071\252\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\015" +
    "\251\070\253\071\252\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\072\265\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\062\317" +
    "\063\315\073\321\101\322\001\001\000\002\001\001\000" +
    "\004\100\310\001\001\000\004\060\314\001\001\000\004" +
    "\060\313\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\062\317\063\315\073\323\101\322\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\064\352\001\001\000\004\064\335\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$CommunicationSyntax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$CommunicationSyntax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$CommunicationSyntax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



        int errors=0;
        String tokenError="";
        int lineError, columnError =0;
        String expectedTokens="";
        ArrayList<SyntaxError> list = new ArrayList();
        Solicitud solicitud = new Solicitud();

        public Solicitud getSolicitud(){
                return solicitud;
        }

        public void setSolicitud(Solicitud solicitud){
                this.solicitud = solicitud;
        }

        public ArrayList<SyntaxError> getList(){
                return list;
        }

        public void report_error(String message, Object info) { 
                if (info instanceof String){
                        Symbol s = cur_token;
                        //System.err.println("  "+ errors + "==> " + info + " en "+tokenError+": "+ message + " [linea: "+lineError+" columna: "+columnError+"]");
                        SyntaxError error = new SyntaxError(info.toString(), tokenError, lineError, columnError);;
                        error.setExpectedTokens(expectedTokens);
                        error.setDescription(message);
                        list.add(error);
                        System.err.println(error.getDescription());
                }
        }

        public void report_error_final(String message, Object info){
                if (info instanceof String){
                        Symbol s = cur_token;
                        errors++;       
                        //System.err.println("  "+ errors + "==> " + info + ": "+ message);
                        SyntaxError error = new SyntaxError(info.toString(), tokenError, lineError, columnError);
                        error.setExpectedTokens(expectedTokens);
                        error.setDescription(message);
                        list.add(error);
                        System.err.println(error.getDescription());
                }
                
        }

    @Override
        public void syntax_error(Symbol symbol){
            int line = symbol.left;
            int column = symbol.right;
            String token = (String) cur_token.value;
            //We get the production
                tokenError = token;
                lineError = line;
                columnError = column;
                expectedTokens = "";
                for(int index=0; index<expected_token_ids().size() ; index++){
                    //We traduce the token to a form that the user might understand
                    expectedTokens += symbl_name_from_id(expected_token_ids().get(index));
                    expectedTokens += ",";
                }
        }

    @Override
        public void unrecovered_syntax_error(Symbol symbol){
                tokenError = (String) cur_token.value;
                lineError = symbol.left;
                columnError = symbol.right;
                expectedTokens = "";
                for(int index=0; index<expected_token_ids().size() ; index++){
                    //We traduce the token to a form that the user might understand
                    expectedTokens += symbl_name_from_id(expected_token_ids().get(index));
                    expectedTokens += ", ";
                }
                report_error_final("Estado Ilegal de Expresion", "Sintaxis incorrecta");
        }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$CommunicationSyntax$actions {
  private final CommunicationSyntax parser;

  /** Constructor */
  CUP$CommunicationSyntax$actions(CommunicationSyntax parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$CommunicationSyntax$do_action_part00000000(
    int                        CUP$CommunicationSyntax$act_num,
    java_cup.runtime.lr_parser CUP$CommunicationSyntax$parser,
    java.util.Stack            CUP$CommunicationSyntax$stack,
    int                        CUP$CommunicationSyntax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$CommunicationSyntax$result;

      /* select the action based on the action number */
      switch (CUP$CommunicationSyntax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= main_body EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).value;
		RESULT = start_val;
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$CommunicationSyntax$parser.done_parsing();
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // main_body ::= solicitudes 
            {
              Object RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).right;
		Solicitud s = (Solicitud)((java_cup.runtime.Symbol) CUP$CommunicationSyntax$stack.peek()).value;
		
                setSolicitud(s);
                
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("main_body",0, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // main_body ::= body 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("main_body",0, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // main_body ::= error main_body 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("main_body",0, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // body ::= lista_estructura body 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("body",1, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // body ::= pista_estructura body 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("body",1, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // body ::= crear_solicitud body 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("body",1, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // body ::= 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("body",1, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // lista_pistas ::= etiqueta_pista pista_lista_ 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("lista_pistas",2, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // pista_lista_ ::= LESS PISTA params_pista_lista pista_lista_ 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("pista_lista_",53, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // pista_lista_ ::= etiqueta_pista_cl 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("pista_lista_",53, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // etiqueta_pista ::= LESS PISTAS GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_pista",3, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // etiqueta_pista_cl ::= LESS DIV PISTAS GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_pista_cl",4, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // open_lista ::= LESS PISTA NOMBRE EQUAL STRING GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("open_lista",5, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-5)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // close_pista ::= LESS DIV PISTA GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("close_pista",6, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // pista_estructura ::= open_lista canales 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("pista_estructura",7, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // canales ::= canal canales 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("canales",8, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // canales ::= close_pista 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("canales",8, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // open_canal ::= LESS CANAL NUMERO EQUAL NUMBER GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("open_canal",9, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-5)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // close_canal ::= LESS DIV CANAL GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("close_canal",55, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // canal ::= open_canal notas 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("canal",10, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // notas ::= nota notas 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("notas",54, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // notas ::= close_canal 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("notas",54, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // nota ::= LESS NOTA DURACION EQUAL NUMBER FRECUENCIA EQUAL valor GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("nota",11, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-8)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // valor ::= DECIMAL 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("valor",56, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // valor ::= NUMBER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("valor",56, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // lista_estructura ::= fact_lista pista_lista 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("lista_estructura",12, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // fact_lista ::= LESS LISTA params_lista 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("fact_lista",13, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // pista_lista ::= LESS PISTA params_pista_lista pista_lista 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("pista_lista",14, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // pista_lista ::= etiqueta_lista_cl 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("pista_lista",14, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // params_pista_lista ::= param_nombre params_pista_lista 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("params_pista_lista",15, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // params_pista_lista ::= param_duracion params_pista_lista 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("params_pista_lista",15, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // params_pista_lista ::= GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("params_pista_lista",15, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // params_lista ::= param_nombre params_lista 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("params_lista",16, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // params_lista ::= param_random params_lista 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("params_lista",16, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // params_lista ::= param_circular params_lista 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("params_lista",16, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // params_lista ::= GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("params_lista",16, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // etiqueta_lista_cl ::= LESS DIV LISTA GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_lista_cl",20, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // lista_listas ::= etiqueta_lista listas_re 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("lista_listas",17, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // listas_re ::= throw_lista listas_re 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("listas_re",18, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // listas_re ::= etiqueta_lista_cl 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("listas_re",18, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // etiqueta_lista ::= LESS LISTAS GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_lista",19, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // etiqueta_lista_cl ::= LESS DIV LISTAS GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_lista_cl",20, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // throw_lista ::= LESS LISTA param_nombre param_pistas GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("throw_lista",51, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-4)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // param_nombre ::= NOMBRE EQUAL STRING 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("param_nombre",21, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // param_pistas ::= PISTAS EQUAL NUMBER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("param_pistas",22, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // param_random ::= ALEATORIA EQUAL STRING 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("param_random",23, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // param_duracion ::= DURACION EQUAL NUMBER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("param_duracion",24, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // param_circular ::= CIRCULAR EQUAL STRING 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("param_circular",25, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // solicitudes ::= solicitud 
            {
              Solicitud RESULT =null;
		int solleft = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).left;
		int solright = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).right;
		Solicitud sol = (Solicitud)((java_cup.runtime.Symbol) CUP$CommunicationSyntax$stack.peek()).value;
		
                        RESULT = sol;
                
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("solicitudes",60, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // solicitud ::= etiqueta_solicitud lista 
            {
              Solicitud RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).right;
		Solicitud l = (Solicitud)((java_cup.runtime.Symbol) CUP$CommunicationSyntax$stack.peek()).value;
		
                        RESULT =l;
                
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("solicitud",59, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // lista ::= tipo nombre 
            {
              Solicitud RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).left;
		int nright = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).right;
		Solicitud n = (Solicitud)((java_cup.runtime.Symbol) CUP$CommunicationSyntax$stack.peek()).value;
		
                if(n!=null){
                        n.setTipo(t, cur_token.left, cur_token.right);
                }
                RESULT = n;
    
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("lista",58, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // tipo ::= etiqueta_tipo tipos etiqueta_tipo_cl 
            {
              String RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).value;
		RESULT=e;
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("tipo",61, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // tipo ::= etiqueta_tipo error etiqueta_tipo_cl 
            {
              String RESULT =null;
		parser.report_error("Se esperaba Lista o Pista","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("tipo",61, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // tipo ::= error 
            {
              String RESULT =null;
		parser.report_error("Se esperaba una solicitud","Inicio ilegal de la expresion");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("tipo",61, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // tipos ::= LISTA 
            {
              String RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CommunicationSyntax$stack.peek()).value;
		RESULT=e.toString();
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("tipos",62, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // tipos ::= PISTA 
            {
              String RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CommunicationSyntax$stack.peek()).value;
		RESULT=e.toString();
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("tipos",62, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // nombre ::= solicitud_nombre nombre 
            {
              Solicitud RESULT =null;
		int snleft = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).left;
		int snright = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).right;
		String sn = (String)((java_cup.runtime.Symbol) CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()).right;
		Solicitud e = (Solicitud)((java_cup.runtime.Symbol) CUP$CommunicationSyntax$stack.peek()).value;
		
                        if(e!=null){
                                if(sn!=null){
                                        e.setNombre(sn, cur_token.left, cur_token.right);
                                }
                        }
                        RESULT = e;
                
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("nombre",57, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // nombre ::= etiqueta_solicitud_cl 
            {
              Solicitud RESULT =null;
		
                Solicitud solicitud = new Solicitud(list);
                solicitud.setSolicitud(true);
                RESULT = solicitud;
            
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("nombre",57, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // nombre ::= error 
            {
              Solicitud RESULT =null;
		 parser.report_error("Se esperaba una etiqueta nombre o cierre de solicitud", "Estructura mal realizada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("nombre",57, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // solicitud_nombre ::= etiqueta_nombre STRING etiqueta_nombre_cl 
            {
              String RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)).value;
		
                        String string = e.toString();
                        string = string.substring(1, string.length() - 1);
                        RESULT = string;
                
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("solicitud_nombre",63, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // solicitud_nombre ::= etiqueta_nombre error etiqueta_nombre_cl 
            {
              String RESULT =null;
		parser.report_error("Se necesita una cadena en etiqueta nombre", "Etiqueta nombre mal realizada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("solicitud_nombre",63, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // crear_solicitud ::= etiqueta_solicitud big_data 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("crear_solicitud",52, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // big_data ::= throw_tipo big_data_re 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("big_data",26, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // big_data_re ::= container_data big_data_re 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("big_data_re",27, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // big_data_re ::= etiqueta_solicitud_cl 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("big_data_re",27, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // container_data ::= etiqueta_datos container_big_data etiqueta_datos_cl 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("container_data",28, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // container_big_data ::= throw_canal throw_nota throw_octava throw_duracion 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("container_big_data",29, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // etiqueta_datos ::= LESS DATOS GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_datos",30, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // etiqueta_datos_cl ::= LESS DIV DATOS GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_datos_cl",31, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // throw_duracion ::= etiqueta_duracion NUMBER etiqueta_duracion_cl 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("throw_duracion",32, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // etiqueta_duracion ::= LESS DURACION GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_duracion",33, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // etiqueta_duracion_cl ::= LESS DIV DURACION GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_duracion_cl",34, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // throw_octava ::= etiqueta_octava NUMBER etiqueta_octava_cl 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("throw_octava",35, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // etiqueta_octava ::= LESS OCTAVA GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_octava",36, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // etiqueta_octava_cl ::= LESS DIV OCTAVA GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_octava_cl",37, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // throw_nota ::= etiqueta_nota NOTE etiqueta_nota_cl 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("throw_nota",38, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // etiqueta_nota ::= LESS NOTA GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_nota",39, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // etiqueta_nota_cl ::= LESS DIV NOTA GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_nota_cl",40, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // throw_canal ::= etiqueta_canal NUMBER etiqueta_canal_cl 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("throw_canal",41, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // etiqueta_canal ::= LESS CANAL GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_canal",42, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // etiqueta_canal_cl ::= LESS DIV CANAL GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_canal_cl",43, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // throw_tipo ::= etiqueta_tipo SIMBOLO etiqueta_tipo_cl 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("throw_tipo",44, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // etiqueta_solicitud ::= LESS SOLICITUD GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_solicitud",47, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // etiqueta_solicitud ::= LESS error GREATER 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \"solicitud\" en etiqueta solicitud", "Etiqueta solicitud mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_solicitud",47, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // etiqueta_solicitud ::= LESS SOLICITUD error 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \">\" para cerrar la etiqueta", "Etiqueta mal cerrada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_solicitud",47, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // etiqueta_solicitud_cl ::= LESS DIV SOLICITUD GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_solicitud_cl",48, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // etiqueta_solicitud_cl ::= error DIV SOLICITUD GREATER 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \"<\" para iniciar cierre de etiqueta","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_solicitud_cl",48, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // etiqueta_solicitud_cl ::= LESS error SOLICITUD GREATER 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \"/\" en cierre de etiqueta solicitud","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_solicitud_cl",48, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // etiqueta_solicitud_cl ::= LESS DIV error GREATER 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \"solciitud\" en cierre de etiqueta solicitud","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_solicitud_cl",48, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // etiqueta_solicitud_cl ::= LESS DIV SOLICITUD error 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \">\" para cerrar la etiqueta solicitud","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_solicitud_cl",48, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // etiqueta_tipo ::= LESS TIPO GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_tipo",45, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // etiqueta_tipo ::= LESS error GREATER 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \"tipo\" en etiqueta tipo","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_tipo",45, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // etiqueta_tipo ::= LESS TIPO error 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \">\" en etiqueta tipo","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_tipo",45, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // etiqueta_tipo_cl ::= LESS DIV TIPO GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_tipo_cl",46, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // etiqueta_tipo_cl ::= error DIV TIPO GREATER 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \"<\" para inicio de cierre de etiqueta tipo","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_tipo_cl",46, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // etiqueta_tipo_cl ::= LESS error TIPO GREATER 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \"/\" en cierre de etiqueta tipo","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_tipo_cl",46, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // etiqueta_tipo_cl ::= LESS DIV error GREATER 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \"tipo\" en cierre de etiqueta tipo","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_tipo_cl",46, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // etiqueta_tipo_cl ::= LESS DIV TIPO error 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \">\" para cerrar la etiqueta tipo","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_tipo_cl",46, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // etiqueta_nombre ::= LESS NOMBRE GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_nombre",49, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // etiqueta_nombre ::= LESS error GREATER 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \"nombre\" para iniciar etiqueta nombre","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_nombre",49, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // etiqueta_nombre ::= LESS NOMBRE error 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \">\" para cerrar etiqueta nombre","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_nombre",49, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // etiqueta_nombre_cl ::= LESS DIV NOMBRE GREATER 
            {
              Object RESULT =null;

              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_nombre_cl",50, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // etiqueta_nombre_cl ::= error DIV NOMBRE GREATER 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \"<\" para iniciar cierre de etiqueta nombre","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_nombre_cl",50, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // etiqueta_nombre_cl ::= LESS error NOMBRE GREATER 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \"/\" en cierre de etiqueta nombre","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_nombre_cl",50, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // etiqueta_nombre_cl ::= LESS DIV error GREATER 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \"nombre\" en cierre de etiqueta nombre","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_nombre_cl",50, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // etiqueta_nombre_cl ::= LESS DIV NOMBRE error 
            {
              Object RESULT =null;
		parser.report_error("Se esperaba \">\" para cerrar etiqueta nombre","Etiqueta mal declarada");
              CUP$CommunicationSyntax$result = parser.getSymbolFactory().newSymbol("etiqueta_nombre_cl",50, ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.elementAt(CUP$CommunicationSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$CommunicationSyntax$stack.peek()), RESULT);
            }
          return CUP$CommunicationSyntax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$CommunicationSyntax$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$CommunicationSyntax$do_action(
    int                        CUP$CommunicationSyntax$act_num,
    java_cup.runtime.lr_parser CUP$CommunicationSyntax$parser,
    java.util.Stack            CUP$CommunicationSyntax$stack,
    int                        CUP$CommunicationSyntax$top)
    throws java.lang.Exception
    {
              return CUP$CommunicationSyntax$do_action_part00000000(
                               CUP$CommunicationSyntax$act_num,
                               CUP$CommunicationSyntax$parser,
                               CUP$CommunicationSyntax$stack,
                               CUP$CommunicationSyntax$top);
    }
}

}
